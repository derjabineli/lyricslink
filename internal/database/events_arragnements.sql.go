// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: events_arragnements.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getArrangementsWithEventId = `-- name: GetArrangementsWithEventId :many
SELECT a.id, a.name, a.lyrics, a.chord_chart, a.song_id
FROM events_arrangements ea
JOIN arrangements a 
    ON a.id = ea.arrangement_id
WHERE ea.event_id = $1
`

func (q *Queries) GetArrangementsWithEventId(ctx context.Context, eventID uuid.UUID) ([]Arrangement, error) {
	rows, err := q.db.QueryContext(ctx, getArrangementsWithEventId, eventID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Arrangement
	for rows.Next() {
		var i Arrangement
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Lyrics,
			&i.ChordChart,
			&i.SongID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
